{
  "code": "const a: Record<string, string> = {}\nlet b: Record<string, number> = {}\nb = a\n",
  "extension": "ts",
  "tokens": [
    {
      "type": "hover",
      "text": "const a: Record<string, string>",
      "start": 6,
      "length": 1,
      "target": "a"
    },
    {
      "type": "hover",
      "text": "type Record<K extends string | number | symbol, T> = { [P in K]: T; }",
      "docs": "Construct a type with a set of properties K of type T",
      "start": 9,
      "length": 6,
      "target": "Record"
    },
    {
      "type": "hover",
      "text": "let b: Record<string, number>",
      "start": 41,
      "length": 1,
      "target": "b"
    },
    {
      "type": "hover",
      "text": "type Record<K extends string | number | symbol, T> = { [P in K]: T; }",
      "docs": "Construct a type with a set of properties K of type T",
      "start": 44,
      "length": 6,
      "target": "Record"
    },
    {
      "type": "hover",
      "text": "let b: Record<string, number>",
      "start": 72,
      "length": 1,
      "target": "b"
    },
    {
      "type": "error",
      "start": 72,
      "length": 1,
      "code": 2322,
      "filename": "[home]/index.ts",
      "id": "err-2322-89-1",
      "text": "Type 'Record<string, string>' is not assignable to type 'Record<string, number>'.\n  'string' index signatures are incompatible.\n    Type 'string' is not assignable to type 'number'.",
      "level": 1
    },
    {
      "type": "hover",
      "text": "const a: Record<string, string>",
      "start": 76,
      "length": 1,
      "target": "a"
    }
  ]
}